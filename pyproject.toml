[tool.poetry]
name = "arcane-scribe"
version = "0.2.0"
description = "A TTRPG Rulebook RAG System"
authors = ["thatsmidnight <10793854+thatsmidnight@users.noreply.github.com>"]
license = "CC0-1.0"
readme = "README.md"
package-mode = true
packages = [
    { include = "api_backend", from = "src/as-api-backend" },
    { include = "api_authorizer", from = "src/as-authorizer" },
    { include = "pdf_ingestor", from = "src/as-pdf-ingestor" },
]

[tool.poetry.dependencies]
python = "~3.12"
requests = "^2.32.4"
faiss-cpu = "^1.11.0"
boto3 = "^1.38.36"
langchain = "^0.3.25"
aws-cdk-lib = "^2.201.0"
aws-lambda-powertools = "^3.14.0"
constructs = "^10.4.2"
langchain-community = "^0.3.25"
langchain-aws = "^0.2.25"
pypdf = "^5.6.0"
mangum = "^0.19.0"
fastapi = "^0.115.12"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
pylint = "^3.3.7"
flake8 = "^7.2.0"
moto = "^5.1.5"
pytest = "^8.4.0"
pytest-cov = "^6.2.1"
coverage = "^7.9.1"
nox = "^2025.5.1"
isort = "^6.0.1"
poethepoet = "^0.34.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
export = "poetry export --without dev --without-hashes -f requirements.txt -o requirements.txt"
test-unit = "poetry run pytest -s --cov-report term-missing --cov=. tests/unit"

[tool.coverage.run]
branch = true
source = ["src"]
omit = [
    "app.py",
    "cdk/*",
    "tests/*",
    "dev_test_harness.py",
    "noxfile.py",
    "**/__init__.py"
]

[tool.coverage.report]
show_missing = true
skip_covered = false
exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
omit = [
    "**/__init__.py",
    "**/context.py",
    "**/tests/*",
    "**/__future/*",
    "**/noxfile.py",
    "**/setup.py",
    "**/dev_test_harness.py",
]

[tool.pytest.ini_options]
minversion = "6.0"
pythonpath = ["src"]
addopts = "-ra -sql --junitxml=junit.xml"
markers = [
    "slow: marks tests as slow (select with '-m \"not slow\"')",
    "serial"
]
testpaths = [
    "tests/unit",
    "tests/integration"
]

[tool.black]
line-length = 79
target-version = ["py312"]
extend-exclude = '''
/(
    |  .*\/deps\/*  # Exclude dependencies
)/
'''

[tool.isort]
profile = "black"
py_version = 312
line_length = 79
wrap_length = 0
multi_line_output = 3
use_parentheses = true
combine_as_imports = true
include_trailing_comma = true
group_by_package = true
length_sort = true
atomic = true
only_sections = true
import_heading_future = "Future"
import_heading_stdlib = "Standard Library"
import_heading_firstparty = "My Modules"
import_heading_thirdparty = "Third Party"
import_heading_localfolder = "Local Modules"
known_localfolder = "cdk,api_authorizer,pdf_ingestor,api_backend,tests"
virtual_env = ".venv"
skip = [".layer", ".nox", ".venv", "cdk.out"]
src_paths = ["src", "cdk", "tests"]
